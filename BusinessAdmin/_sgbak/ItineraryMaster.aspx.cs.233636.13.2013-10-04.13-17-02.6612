using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using e_Travel.Class;
using e_TravelBLL.TourPackage;
using System.Data;
using Sibin.ExceptionHandling.ExceptionHandler;
using SIBINUtility.ValidatorClass;

namespace e_Travel.BusinessAdmin
{
    public partial class ItineraryMaster : AdminBasePage
    {
        #region Private Variables
        BusAdmItineraryMstBLL objBusAdmItineraryMstBLL;
        BusAdmItineraryTypeMstBLL objBusAdmItineraryTypeMstBLL;
        PtlAdmTravelSegmentMstBLL objPtlAdmTravelSegmentMstBLL;
        
        #endregion

        #region Gridview Events and Load GridView
        private void BindEvents()
        {
            ItineraryCustomGridView.ucGridView_SelectedIndexChanging += new GridViewSelectEventHandler(ItineraryCustomGridView_SelectedIndexChanging);
            ItineraryCustomGridView.ucGridView_RowDeleting += new GridViewDeleteEventHandler(ItineraryCustomGridView_RowDeleting);
            ItineraryCustomGridView.DataSource += new SIBINUtility.UserControl.GridView.ucGridView.GridViewDataSource(LoadGridView);
        }

        protected void ItineraryCustomGridView_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
        {
            DisableInputControls();
            ItineraryDetailTextBox.Text = HttpUtility.HtmlDecode(ItineraryCustomGridView.Rows[e.NewSelectedIndex].Cells[1].Text);
            ItineraryTypeDropDownList.SelectedValue = ItineraryCustomGridView.DataKeys[e.NewSelectedIndex].Values["ItineraryTypeID"].ToString();
            TravelSegmentDropDownList.SelectedValue = ItineraryCustomGridView.DataKeys[e.NewSelectedIndex].Values["TravelSegmentID"].ToString();
            
            if (HttpUtility.HtmlDecode(ItineraryCustomGridView.Rows[e.NewSelectedIndex].Cells[3].T) == "True")
            {
                YesVehicleRequiredRadioButton.Checked = true;
                NoVehicleRequiredRadioButton.Checked = false;
            }
            else
            {
                YesVehicleRequiredRadioButton.Checked = false;
                NoVehicleRequiredRadioButton.Checked = true;
            }
            if (HttpUtility.HtmlDecode(ItineraryCustomGridView.Rows[e.NewSelectedIndex].Cells[4].Text) == "True")
            {
                YesPickUpRadioButton.Checked = true;
                NoPickUpRadioButton.Checked = false;
            }
            else
            {
                YesPickUpRadioButton.Checked = false;
                NoPickUpRadioButton.Checked = true;
            }

        }

        protected void ItineraryCustomGridView_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            objBusAdmItineraryMstBLL = new BusAdmItineraryMstBLL();
            try
            {
                int status = 0;

                objBusAdmItineraryMstBLL.DeleteItinerary(ItineraryCustomGridView.DataKeys[e.RowIndex].Values["ItineraryID"].ToString(), Page.User.Identity.Name,ref status);
                if (status == 0)
                {
                    ItineraryCustomGridView.BindData();
                    WebMessenger.Show(this, "Itinerary  Deleted Successfully", "Deleted", DialogTypes.Success);
                }
                else
                {
                    WebMessenger.Show(this.Page, "Record Cannot Be Deleted As It Is Refered By Other Record", "Relation Exist", DialogTypes.Information);
                }
            }
            catch (Exception ex)
            {
                UserInterfaceExceptionHandler.HandleException(ref ex);
                Session["OpernType"] = null;
                WebMessenger.Show(this, "Unable To Delete Itinerary  At This Moment", "Error", DialogTypes.Error);
            }
            finally
            {
                objBusAdmItineraryMstBLL = null;
            }
        }

        private DataTable LoadGridView()
        {
            objBusAdmItineraryMstBLL = new BusAdmItineraryMstBLL();
            DataTable dtRec = new DataTable();
            try
            {
                int startRowIndex = (ItineraryCustomGridView.PageIndex * ItineraryCustomGridView.PageSize) + 1;
                dtRec = objBusAdmItineraryMstBLL.GetAllItineraryPaged(startRowIndex, ItineraryCustomGridView.PageSize, Session["BusinessID"].ToString());
                if (dtRec.Rows.Count > 0)
                {
                    ItineraryCustomGridView.TotalRecordCount = int.Parse(dtRec.Rows[0]["TotalRows"].ToString());
                }
            }
            catch (Exception)
            {
                WebMessenger.Show(this, "Unable To Load Itinerary List At This Moment", "Error", DialogTypes.Error);
            }
            finally
            {
                objBusAdmItineraryMstBLL = null;
            }
            return dtRec;
        }
        #endregion

        #region Page Load
        protected void Page_Load(object sender, EventArgs e)
        {
            
            BindEvents();
            if (!IsPostBack)
            {
                if (Session["BusinessID"] == null)
                {
                    Response.Redirect("~/PortalAdmin/RegisterBusiness.aspx");
                }
                else
                {
                    ItineraryCustomGridView.AddGridViewColumns("ItineraryDetail |ItineraryTypeName|TravelSegmentName|VehicleRequired|PickupDrop", "ItineraryDetail|ItineraryTypeName|TravelSegmentName|VehicleRequired|PickupDrop", "200|200|200|100|100", "ItineraryID|ItineraryTypeID|TravelSegmentID", true, true);
                    ItineraryCustomGridView.BindData();
                    DisableInputControls();
                    ClearInputControls();
                    LoadAllItineraryType();
                    LoadTravelSegment();
                }
            }

        }
        #endregion

        #region Button Click Events
        protected void AddButton_Click(object sender, EventArgs e)
        {
            EnableInputControls();
            ClearInputControls();
            ItineraryDetailTextBox.Focus();
            this.Session["OpernType"] = "Add";
        }

        protected void EditButton_Click(object sender, EventArgs e)
        {
            if (ItineraryCustomGridView.SelectedDataKey == null)
            {
                WebMessenger.Show(this, "Select A Record From List First", "Information", DialogTypes.Information);
                return;
            }
            else
            {
                EnableInputControls();
                ItineraryDetailTextBox.Focus();
                this.Session["OpernType"] = "Edit";
            }
        }

        protected void SaveButton_Click(object sender, EventArgs e)
        {
            objBusAdmItineraryMstBLL = new BusAdmItineraryMstBLL();
            //Validation
            bool vehicleRequired = false, pickUp = false;
            if (ValidatorClass.ValidateText(ItineraryDetailTextBox.Text.Trim()) == false)
            {
                WebMessenger.Show(this, "Invalid Itinerary Detail Name", "Information", DialogTypes.Information);
                ItineraryDetailTextBox.Focus();
                return;
            }
            if (ItineraryTypeDropDownList.SelectedValue=="0")
            {
                WebMessenger.Show(this, "Invalid  Itinerary Type ", "Information", DialogTypes.Error);
                ItineraryTypeDropDownList.Focus();
                return;
            }
            if (TravelSegmentDropDownList.SelectedValue == "0")
            {
                WebMessenger.Show(this, "Invalid Travel Segment ", "Information", DialogTypes.Error);
                TravelSegmentDropDownList.Focus();
                return;
            }
            if (YesVehicleRequiredRadioButton.Checked == true)
            {
                vehicleRequired = true;
            }
            else if (NoVehicleRequiredRadioButton.Checked == true)
            {
                vehicleRequired = false;
            }
            if (YesPickUpRadioButton.Checked == true)
            {
                pickUp = true;
            }
            else if (NoPickUpRadioButton.Checked == true)
            {
                pickUp = false;
            }


            try
            {
                if (Page.IsValid)
                {
                    if (Session["OpernType"].ToString() == "Add")
                    {
                        objBusAdmItineraryMstBLL.AddItinerary(Session["BusinessID"].ToString(), ItineraryDetailTextBox.Text.Trim(), Int64.Parse(ItineraryTypeDropDownList.SelectedValue),Int64.Parse(TravelSegmentDropDownList.SelectedValue.ToString()), vehicleRequired, pickUp, false, Page.User.Identity.Name);
                        ItineraryCustomGridView.BindData();
                        ClearInputControls();
                        DisableInputControls();
                        Session["OpernType"] = null;
                        WebMessenger.Show(this, "Itinerary Added Sucessfully", "Success", DialogTypes.Success);
                    }
                    else if (Session["OpernType"].ToString() == "Edit")
                    {
                        objBusAdmItineraryMstBLL.EditItinerary(ItineraryCustomGridView.SelectedDataKey.Values["ItineraryID"].ToString(), ItineraryDetailTextBox.Text.Trim(), Int64.Parse(ItineraryTypeDropDownList.SelectedValue),Int64.Parse(TravelSegmentDropDownList.SelectedValue.ToString()), vehicleRequired, pickUp, false, Page.User.Identity.Name);
                        ItineraryCustomGridView.BindData();
                        ClearInputControls();
                        DisableInputControls();
                        Session["OpernType"] = null;
                        WebMessenger.Show(this, "Itinerary Updated Sucessfully", "Success", DialogTypes.Success);
                    }
                    else
                    {
                        WebMessenger.Show(this, "Invalid Operation", "Operation", DialogTypes.Information);
                        ClearInputControls();
                        DisableInputControls();
                        Session["OpernType"] = null;
                    }
                }
                else
                {
                    WebMessenger.Show(this, "Invalid Operation", "Operation", DialogTypes.Information);
                    ClearInputControls();
                    DisableInputControls();
                    Session["OpernType"] = null;
                }
            }
            catch (Exception ex)
            {
                UserInterfaceExceptionHandler.HandleException(ref ex);
                Session["OpernType"] = null;
                WebMessenger.Show(this, ex.Message, "Error", DialogTypes.Error);
            }
            finally
            {
                objBusAdmItineraryMstBLL = null;
            }
        }

        protected void ClearButton_Click(object sender, EventArgs e)
        {
            ClearInputControls();
            DisableInputControls();
            this.Session["OpernType"] = null;
        }
        #endregion

        #region Enable/Disable/Clear Form Elements
        private void EnableInputControls()
        {
            ItineraryDetailTextBox.Enabled = true;
            YesVehicleRequiredRadioButton.Enabled = true;
            YesPickUpRadioButton.Enabled = true;
            NoVehicleRequiredRadioButton.Enabled = true;
            NoPickUpRadioButton.Enabled = true;
            ItineraryTypeDropDownList.Enabled = true;
            TravelSegmentDropDownList.Enabled = true;
        }

        private void DisableInputControls()
        {
            ItineraryDetailTextBox.Enabled = false;
            YesVehicleRequiredRadioButton.Enabled = false;
            YesPickUpRadioButton.Enabled = false;
            NoVehicleRequiredRadioButton.Enabled = false;
            NoPickUpRadioButton.Enabled = false;
            ItineraryTypeDropDownList.Enabled = false;
            TravelSegmentDropDownList.Enabled = false;
        }

        private void ClearInputControls()
        {
            ItineraryDetailTextBox.Text = "";
            YesVehicleRequiredRadioButton.Checked = false;
            YesPickUpRadioButton.Checked = false;
            NoVehicleRequiredRadioButton.Checked = false;
            NoPickUpRadioButton.Checked = false;
            ItineraryTypeDropDownList.SelectedValue = "0";
            TravelSegmentDropDownList.SelectedValue = "0";
        }
        #endregion
        private void LoadAllItineraryType()
        {
            objBusAdmItineraryTypeMstBLL = new BusAdmItineraryTypeMstBLL();
            try
            {
                ItineraryTypeDropDownList.Items.Clear();
                ItineraryTypeDropDownList.Items.Add(new ListItem("--- Select ---", "0"));
                ItineraryTypeDropDownList.DataTextField = "ItineraryTypeName";
                ItineraryTypeDropDownList.DataValueField = "ItineraryTypeID";
                ItineraryTypeDropDownList.DataSource = objBusAdmItineraryTypeMstBLL.GetItineraryType(Session["BusinessID"].ToString());
                ItineraryTypeDropDownList.DataBind();
                ItineraryTypeDropDownList.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                WebMessenger.Show(this, "Unable To Load All ItineraryType At This Moment", "Error", DialogTypes.Error);
                return;
            }
            finally
            {
                objBusAdmItineraryTypeMstBLL = null;
            }

        }

        private void LoadTravelSegment()
        {
            objPtlAdmTravelSegmentMstBLL = new PtlAdmTravelSegmentMstBLL();
            try
            {
                TravelSegmentDropDownList.Items.Clear();
                TravelSegmentDropDownList.Items.Add(new ListItem("--- Select ---", "0"));
                TravelSegmentDropDownList.DataTextField = "TravelSegmentName";
                TravelSegmentDropDownList.DataValueField = "TravelSegmentID";
                TravelSegmentDropDownList.DataSource = objPtlAdmTravelSegmentMstBLL.GetTravelSegment();
                TravelSegmentDropDownList.DataBind();
                TravelSegmentDropDownList.SelectedIndex = 0;
            }
            catch (Exception ex)
            {
                WebMessenger.Show(this, "Unable To Load All Travel Segment At This Moment", "Error", DialogTypes.Error);
                return;
            }
            finally
            {
                objPtlAdmTravelSegmentMstBLL = null;
            }

        }
    }
}