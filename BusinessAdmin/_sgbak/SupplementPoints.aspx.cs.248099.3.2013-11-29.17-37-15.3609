using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;

using Sibin.Utilities.Web.ExceptionHandling;
using SIBINUtility.ValidatorClass;

using e_Travel.Class;
using e_TravelBLL.TourPackage;

namespace e_Travel.BusinessAdmin
{
    public partial class SupplementPoints : AdminBasePage
    {
        SupplementPointsBLL objSupplementPointsBLL;
        

        #region Gridview Events and Load GridView
        private void BindEvents()
        {
            SuppPointsCustomGridView.ucGridView_SelectedIndexChanging += new GridViewSelectEventHandler(SuppPointsCustomGridView_SelectedIndexChanging);
            SuppPointsCustomGridView.ucGridView_RowDeleting += new GridViewDeleteEventHandler(SuppPointsCustomGridView_RowDeleting);
            SuppPointsCustomGridView.DataSource += new SIBINUtility.UserControl.GridView.ucGridView.GridViewDataSource(LoadGridView);
        }

        protected void SuppPointsCustomGridView_SelectedIndexChanging(object sender, GridViewSelectEventArgs e)
        {
            Session["OpernType"] = null;
            DisableInputControls();
            SupplementDescTextBox.Text = HttpUtility.HtmlDecode(SuppPointsCustomGridView.DataKeys[e.NewSelectedIndex].Values["SupplementDesc"].ToString());
            SupplementNameTextBox.Text = HttpUtility.HtmlDecode(SuppPointsCustomGridView.Rows[e.NewSelectedIndex].Cells[1].Text);
            EffectiveFromTextBox.Text = string.Format("{0:dd-MMM-yyyy}",DateTime.Parse(HttpUtility.HtmlDecode(SuppPointsCustomGridView.Rows[e.NewSelectedIndex].Cells[2].Text)));
            EffectiveUptoTextBox.Text = string.Format("{0:dd-MMM-yyyy}", DateTime.Parse(HttpUtility.HtmlDecode(SuppPointsCustomGridView.Rows[e.NewSelectedIndex].Cells[3].Text)));
            if (HttpUtility.HtmlDecode(SuppPointsCustomGridView.DataKeys[e.NewSelectedIndex].Values["IsPerPax"].ToString()) == "True")
            {
                PerPaxCheckBox.Checked = true;
            }
            else
            {
                PerPaxCheckBox.Checked = false;
            }
            CostPriceTextBox.Text = HttpUtility.HtmlDecode(SuppPointsCustomGridView.DataKeys[e.NewSelectedIndex].Values["CostPrice"].ToString());
            SellPriceTextBox.Text = HttpUtility.HtmlDecode(SuppPointsCustomGridView.DataKeys[e.NewSelectedIndex].Values["SellingPrice"].ToString());
        }

        protected void SuppPointsCustomGridView_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            objSupplementPointsBLL = new SupplementPointsBLL();
            try
            {
                objSupplementPointsBLL.DeleteSupplementPoints(SuppPointsCustomGridView.DataKeys[e.RowIndex].Values["SupplementPointID"].ToString(),Page.User.Identity.Name);
                WebMessenger.Show(this.Page, "Record Deleted Successfully", "Deleted", DialogTypes.Success);
                SuppPointsCustomGridView.BindData();
            }
            catch (Exception ex)
            {
                UserInterfaceExceptionHandler.HandleException(ref ex);
                Session["OpernType"] = null;
                WebMessenger.Show(this, "Unable To Delete Supplement Points At This Moment", "Error", DialogTypes.Error);
            }
            finally
            {
                ClearInputControls();
                DisableInputControls();
                objSupplementPointsBLL = null;
            }
        }

        private DataTable LoadGridView()
        {
            objSupplementPointsBLL = new SupplementPointsBLL();
            DataTable dtRec = new DataTable();
            try
            {
                int startRowIndex = (SuppPointsCustomGridView.PageIndex * SuppPointsCustomGridView.PageSize) + 1;
                dtRec = objSupplementPointsBLL.GetAllSupplementPointsPaged(Session["BusinessID"].ToString(), startRowIndex, SuppPointsCustomGridView.PageSize);
                if (dtRec.Rows.Count > 0)
                {
                    SuppPointsCustomGridView.TotalRecordCount = int.Parse(dtRec.Rows[0]["TotalRows"].ToString());
                }
            }
            catch (Exception)
            {
                WebMessenger.Show(this, "Unable To Load Supplement Points List At This Moment", "Error", DialogTypes.Error);
            }
            finally
            {
                objSupplementPointsBLL = null;
            }
            return dtRec;
        }
        #endregion

        #region Page Load
        protected void Page_Load(object sender, EventArgs e)
        {
            checkBusinessID();
            BindEvents();
            if (!IsPostBack)
            {
                SuppPointsCustomGridView.AddGridViewColumns("Supplement Point Name |Effective From|Effective Upto", "SupplementName|EffectiveDateFrom|EffectiveDateUpto", "200|200|200", "SupplementPointID|SupplementDesc|IsPerPax|CostPrice|SellingPrice", true, true);
                SuppPointsCustomGridView.BindData();
                DisableInputControls();
                ClearInputControls();
            }
        }
        #endregion

        #region Button Click Events
        protected void AddButton_Click(object sender, EventArgs e)
        {
            EnableInputControls();
            ClearInputControls();
            SupplementNameTextBox.Focus();
            this.Session["OpernType"] = "Add";
        }

        protected void EditButton_Click(object sender, EventArgs e)
        {
            if (SuppPointsCustomGridView.SelectedDataKey == null)
            {
                WebMessenger.Show(this, "Select A Record From List First", "Information", DialogTypes.Information);
                return;
            }
            else
            {
                EnableInputControls();
                SupplementNameTextBox.Focus();
                this.Session["OpernType"] = "Edit";
            }
        }

        protected void SaveButton_Click(object sender, EventArgs e)
        {
            objSupplementPointsBLL = new SupplementPointsBLL();
            //Validation
            if (SupplementNameTextBox.Text.Trim()=="")
            {
                WebMessenger.Show(this, "Supplement Point Name Is Required", "Information", DialogTypes.Information);
                SupplementNameTextBox.Focus();
                return;
            }
            if (SupplementDescTextBox.Text.Trim() == "")
            {
                WebMessenger.Show(this, "Supplement Point Description Is Required", "Information", DialogTypes.Information);
                return;
            }

            if (EffectiveFromTextBox.Text.Trim() == "")
            {
                WebMessenger.Show(this, "Effective From Date  Is Required", "Information", DialogTypes.Information);
                return;
            }
            if (EffectiveUptoTextBox.Text.Trim() == "")
            {
                WebMessenger.Show(this, "Effective Upto Date  Is Required", "Information", DialogTypes.Information);
                return;
            }
            if (CostPriceTextBox.Text.Trim() == "")
            {
                WebMessenger.Show(this, "Cost Price Is   Is Required", "Information", DialogTypes.Information);
                return;
            }
            if(ValidatorClass.IsNumeric(CostPriceTextBox.Text.Trim())== false)
            {
                WebMessenger.Show(this, "Invalid Character In Cost Price", "Information", DialogTypes.Information);
                return;
            }
            if (SellPriceTextBox.Text.Trim() == "")
            {
                WebMessenger.Show(this, "Selling Price  Is Required", "Information", DialogTypes.Information);
                return;
            }
            if (ValidatorClass.IsNumeric(SellPriceTextBox.Text.Trim()) == false)
            {
                WebMessenger.Show(this, "Invalid Character In Selling Price", "Information", DialogTypes.Information);
                return;
            }
            
            

            try
            {
                if (Page.IsValid)
                {
                    if (Session["OpernType"] != null)
                    {
                        if (Session["OpernType"].ToString() == "Add")
                        {
                            objSupplementPointsBLL.AddSupplementPoint(Session["BusinessID"].ToString(), SupplementNameTextBox.Text.Trim(),SupplementDescTextBox.Text.Trim(),DateTime.Parse(EffectiveFromTextBox.Text.Trim()),DateTime.Parse(EffectiveUptoTextBox.Text.Trim()),PerPaxCheckBox.Checked,decimal.Parse(CostPriceTextBox.Text.Trim()),decimal.Parse(SellPriceTextBox.Text.Trim()), Page.User.Identity.Name);
                            SuppPointsCustomGridView.BindData();
                            ClearInputControls();
                            DisableInputControls();
                            Session["OpernType"] = null;
                            WebMessenger.Show(this, "Supplement Point Added Sucessfully", "Success", DialogTypes.Success);
                        }
                        else if (Session["OpernType"].ToString() == "Edit")
                        {
                            objSupplementPointsBLL.EditSupplementPoint(SuppPointsCustomGridView.SelectedDataKey.Values["SupplementPointID"].ToString(),SupplementNameTextBox.Text.Trim(),SupplementDescTextBox.Text.Trim(),DateTime.Parse(EffectiveFromTextBox.Text.Trim()),DateTime.Parse(EffectiveUptoTextBox.Text.Trim()),PerPaxCheckBox.Checked,decimal.Parse(CostPriceTextBox.Text.Trim()),decimal.Parse(SellPriceTextBox.Text.Trim()), Page.User.Identity.Name);
                            SuppPointsCustomGridView.BindData();
                            ClearInputControls();
                            DisableInputControls();
                            Session["OpernType"] = null;
                            WebMessenger.Show(this, "Supplement Point Updated Sucessfully", "Success", DialogTypes.Success);
                        }
                        else
                        {
                            WebMessenger.Show(this, "Invalid Operation", "Operation", DialogTypes.Information);
                            ClearInputControls();
                            DisableInputControls();
                            Session["OpernType"] = null;
                        }
                    }

                    else
                    {
                        WebMessenger.Show(this, "Select A Opeartion First", "Information", DialogTypes.Information);
                        return;
                    }
                }
                else
                {
                    WebMessenger.Show(this, "Invalid Operation", "Operation", DialogTypes.Information);
                    ClearInputControls();
                    DisableInputControls();
                    Session["OpernType"] = null;
                }


            }
            catch (Exception ex)
            {
                UserInterfaceExceptionHandler.HandleException(ref ex);
                Session["OpernType"] = null;
                WebMessenger.Show(this, ex.Message, "Error", DialogTypes.Error);
            }
            finally
            {
                objSupplementPointsBLL = null;
            }
        }

        protected void ClearButton_Click(object sender, EventArgs e)
        {
            ClearInputControls();
            DisableInputControls();
            this.Session["OpernType"] = null;
        }
        #endregion

        #region Enable/Disable/Clear Form Elements
        private void EnableInputControls()
        {
            SupplementNameTextBox.Enabled = true;
            SupplementDescTextBox.Enabled = true;
            EffectiveFromTextBox.Enabled = true;
            EffectiveUptoTextBox.Enabled = true;
            CostPriceTextBox.Enabled = true;
            SellPriceTextBox.Enabled = true;
            PerPaxCheckBox.Enabled = true;
        }

        private void DisableInputControls()
        {
            SupplementNameTextBox.Enabled = false;
            SupplementDescTextBox.Enabled = false;
            EffectiveFromTextBox.Enabled = false;
            EffectiveUptoTextBox.Enabled = false;
            CostPriceTextBox.Enabled = false;
            SellPriceTextBox.Enabled = false;
            PerPaxCheckBox.Enabled = false;
        }

        private void ClearInputControls()
        {
            SupplementNameTextBox.Text = "";
            SupplementDescTextBox.Text = "";
            EffectiveFromTextBox.Text = "";
            EffectiveUptoTextBox.Text = "";
            CostPriceTextBox.Text = "";
            SellPriceTextBox.Text = "";
            PerPaxCheckBox.Checked = false;
           
        }
        #endregion

       
        protected void checkBusinessID()
        {
            if (Session["BusinessID"] == null)
            {
                if (Request.Cookies["BusinessID"] != null)
                {
                    Session["BusinessID"] = Request.Cookies["BusinessID"].Value.ToString();
                }
                else
                {
                    if (Page.User.Identity.Name != "")
                    {
                        if (User.IsInRole("BusinessAdmin"))
                        {
                            Session["BusinessID"] = HttpContext.Current.Profile.GetPropertyValue("BusinessID").ToString();
                        }
                    }
                }
                Response.Redirect("~/PortalAdmin/RegisterBusiness.aspx");
            }
        }
    }
}